{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":587,"status":"ok","timestamp":1686302474509,"user":{"displayName":"渡邊 一翔","userId":"04813779956424625336"},"user_tz":-540},"id":"lGGyVJsvGs3C"},"outputs":[],"source":["import cv2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8J_Xpff8JTrK"},"outputs":[],"source":["from IPython.display import display, Javascript\n","from google.colab.output import eval_js\n","from base64 import b64decode\n","\n","def take_photo(filename='photo.jpg', quality=0.8):\n","  js = Javascript('''\n","    async function takePhoto(quality) {\n","      const div = document.createElement('div');\n","      const capture = document.createElement('button');\n","      capture.textContent = 'Capture';\n","      div.appendChild(capture);\n","\n","      const video = document.createElement('video');\n","      video.style.display = 'block';\n","      const stream = await navigator.mediaDevices.getUserMedia({video: true});\n","\n","      document.body.appendChild(div);\n","      div.appendChild(video);\n","      video.srcObject = stream;\n","      await video.play();\n","\n","      // Resize the output to fit the video element.\n","      google.colab.output.setIframeHeight(document.documentElement.scrollHeight, true);\n","\n","      // Wait for Capture to be clicked.\n","      await new Promise((resolve) =\u003e capture.onclick = resolve);\n","\n","      const canvas = document.createElement('canvas');\n","      canvas.width = video.videoWidth;\n","      canvas.height = video.videoHeight;\n","      canvas.getContext('2d').drawImage(video, 0, 0);\n","      stream.getVideoTracks()[0].stop();\n","      div.remove();\n","      return canvas.toDataURL('image/jpeg', quality);\n","    }\n","    ''')\n","  display(js)\n","  data = eval_js('takePhoto({})'.format(quality))\n","  binary = b64decode(data.split(',')[1])\n","  with open(filename, 'wb') as f:\n","    f.write(binary)\n","  return filename"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":900},"executionInfo":{"elapsed":2343,"status":"error","timestamp":1685681271493,"user":{"displayName":"渡邊 一翔","userId":"04813779956424625336"},"user_tz":-540},"id":"OGC5FXT8JTrT","outputId":"30c2f779-929c-4c6a-8473-484705e592b9"},"outputs":[{"data":{"application/javascript":["\n","    async function takePhoto(quality) {\n","      const div = document.createElement('div');\n","      const capture = document.createElement('button');\n","      capture.textContent = 'Capture';\n","      div.appendChild(capture);\n","\n","      const video = document.createElement('video');\n","      video.style.display = 'block';\n","      const stream = await navigator.mediaDevices.getUserMedia({video: true});\n","\n","      document.body.appendChild(div);\n","      div.appendChild(video);\n","      video.srcObject = stream;\n","      await video.play();\n","\n","      // Resize the output to fit the video element.\n","      google.colab.output.setIframeHeight(document.documentElement.scrollHeight, true);\n","\n","      // Wait for Capture to be clicked.\n","      await new Promise((resolve) =\u003e capture.onclick = resolve);\n","\n","      const canvas = document.createElement('canvas');\n","      canvas.width = video.videoWidth;\n","      canvas.height = video.videoHeight;\n","      canvas.getContext('2d').drawImage(video, 0, 0);\n","      stream.getVideoTracks()[0].stop();\n","      div.remove();\n","      return canvas.toDataURL('image/jpeg', quality);\n","    }\n","    "],"text/plain":["\u003cIPython.core.display.Javascript object\u003e"]},"metadata":{},"output_type":"display_data"},{"ename":"KeyboardInterrupt","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-4-0c10a72398cd\u003e\u001b[0m in \u001b[0;36m\u003ccell line: 2\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mIPython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdisplay\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImage\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 3\u001b[0;31m   \u001b[0mfilename\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtake_photo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Saved to {}'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   \u001b[0;31m# Show the image which was just taken.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m\u003cipython-input-3-9a3bc4379e3c\u003e\u001b[0m in \u001b[0;36mtake_photo\u001b[0;34m(filename, quality)\u001b[0m\n\u001b[1;32m     36\u001b[0m     ''')\n\u001b[1;32m     37\u001b[0m   \u001b[0mdisplay\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mjs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 38\u001b[0;31m   \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0meval_js\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'takePhoto({})'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mquality\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m   \u001b[0mbinary\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb64decode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m','\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m   \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'wb'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/output/_js.py\u001b[0m in \u001b[0;36meval_js\u001b[0;34m(script, ignore_result, timeout_sec)\u001b[0m\n\u001b[1;32m     38\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mignore_result\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     39\u001b[0m     \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 40\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0m_message\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     41\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m     94\u001b[0m     \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_read_next_input_message\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     95\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0m_NOT_READY\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdict\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 96\u001b[0;31m       \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.025\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     97\u001b[0m       \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     98\u001b[0m     if (\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["from IPython.display import Image\n","try:\n","  filename = take_photo()\n","  print('Saved to {}'.format(filename))\n","  # Show the image which was just taken.\n","  display(Image(filename))\n","except Exception as err:\n","  # Errors will be thrown if the user does not have a webcam or if they do not\n","  # grant the page permission to access it.\n","  print(str(err))"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10434,"status":"ok","timestamp":1686302484937,"user":{"displayName":"渡邊 一翔","userId":"04813779956424625336"},"user_tz":-540},"id":"SKFVZ24ZTgAk","outputId":"61338a20-05ff-419d-f4a4-f52a4aaefafe"},"outputs":[{"name":"stdout","output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":962,"status":"ok","timestamp":1686302487014,"user":{"displayName":"渡邊 一翔","userId":"04813779956424625336"},"user_tz":-540},"id":"8Py85fBtJ0tk"},"outputs":[],"source":["import numpy as np\n","import cv2\n","import glob\n","import matplotlib.pyplot as plt\n","from PIL import Image\n","from google.colab.patches import cv2_imshow\n","\n","# termination criteria\n","criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 30, 0.001)\n","\n","# chessboard grid points\n","cbrow = 7\n","cbcol = 10\n","\n","# prepare object points, like (0,0,0), (1,0,0), (2,0,0) ....,(6,5,0)\n","objp = np.zeros((cbrow*cbcol,3), np.float32)\n","objp[:,:2] = np.mgrid[0:cbcol,0:cbrow].T.reshape(-1,2)\n","\n","# Arrays to store object points and image points from all the images.\n","objpoints = [] # 3d point in real world space\n","imgpoints = [] # 2d points in image plane.\n","\n","images = glob.glob('/content/drive/MyDrive/Colab_Notebooks/hanaizumi_project/img_right/*.jpg')\n"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"18joK7h1fHo4GyBoM4FxLBdza6ZLgLBPe"},"executionInfo":{"elapsed":60872,"status":"ok","timestamp":1686302549261,"user":{"displayName":"渡邊 一翔","userId":"04813779956424625336"},"user_tz":-540},"id":"s1bmBQAeRR_S","outputId":"807afd3e-ef2b-46be-ae8e-15c9507e3075"},"outputs":[],"source":["for fname in images:\n","    img = cv2.imread(fname)\n","    gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\n","\n","    # Find the chess board corners\n","    ret, corners = cv2.findChessboardCorners(gray, (cbcol,cbrow),None)\n","\n","    # If found, add object points, image points (after refining them)\n","    if ret == False:\n","      print(\"見つけられませんでした\"+ fname)\n","\n","    if ret == True:\n","        objpoints.append(objp)\n","\n","        corners2 = cv2.cornerSubPix(gray,corners,(11,11),(-1,-1),criteria)\n","        imgpoints.append(corners2)\n","\n","        # Draw and display the corners\n","        img = cv2.drawChessboardCorners(img, (cbcol,cbrow), corners2,ret)\n","        # plt.imshow(img)\n","        cv2_imshow(img)\n","        cv2.waitKey(500)\n","\n","cv2.destroyAllWindows()"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":392,"status":"ok","timestamp":1686302552529,"user":{"displayName":"渡邊 一翔","userId":"04813779956424625336"},"user_tz":-540},"id":"Luewz2TQgHw6","outputId":"345bd555-fd60-45c8-e49e-a6913a9b4736"},"outputs":[{"data":{"text/plain":["(1280, 960)"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["gray.shape[::-1]"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1686302554327,"user":{"displayName":"渡邊 一翔","userId":"04813779956424625336"},"user_tz":-540},"id":"Jp5HMxQGdvsI"},"outputs":[],"source":["# カメラキャリブレーション\n","retval,mtx,dist,rvecs,tvecs = cv2.calibrateCamera(objpoints,imgpoints,gray.shape[::-1],None,None)"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":11918,"status":"ok","timestamp":1686302568088,"user":{"displayName":"渡邊 一翔","userId":"04813779956424625336"},"user_tz":-540},"id":"og3nA4vtdSQo"},"outputs":[],"source":["for i, fname in enumerate(images):\n","  img = cv2.imread(fname)\n","  h,  w = img.shape[:2]\n","  newcameramtx, roi=cv2.getOptimalNewCameraMatrix(mtx,dist,(w,h),1,(w,h))\n","\n","  # 歪補正\n","  dst = cv2.undistort(img, mtx, dist, None, newcameramtx)\n","\n","  # 画像の切り落とし\n","  x,y,w,h = roi\n","  dst = dst[y:y+h, x:x+w]\n","  cv2.imwrite('/content/drive/MyDrive/Colab_Notebooks/hanaizumi_project/img_right_fix/right_fix_'+ str(i) +'.jpg', dst)"]},{"cell_type":"markdown","metadata":{"id":"sYAdh6HSEAXw"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U3QAS9U1D_xo"},"outputs":[],"source":["#姿勢推定"]},{"cell_type":"markdown","metadata":{"id":"Nd-GFu7jNIA2"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O9docAP9EpQV"},"outputs":[],"source":["def draw(img, corners, imgpts):\n","    corner = tuple(corners[0].ravel().astype(np.uint))\n","    # corner = (10,150)\n","    img = cv2.line(img, corner, tuple(imgpts[0].ravel().astype(np.uint)), (255,0,0), 5)\n","    img = cv2.line(img, corner, tuple(imgpts[1].ravel().astype(np.uint)), (0,255,0), 5)\n","    img = cv2.line(img, corner, tuple(imgpts[2].ravel().astype(np.uint)), (0,0,255), 5)\n","    return img"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h36TB5y4E1iB"},"outputs":[],"source":["criteria = (cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER, 30, 0.001)\n","objp = np.zeros((cbcol*cbrow,3), np.float32)  #ここ変えた \n","objp[:,:2] = np.mgrid[0:cbrow,0:cbcol].T.reshape(-1,2) #ここ変えた\n","\n","axis = np.float32([[3,0,0], [0,3,0], [0,0,-3]]).reshape(-1,3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kjPq2n31PnGi"},"outputs":[],"source":["images = glob.glob('/content/drive/MyDrive/Colab_Notebooks/hanaizumi_project/img_right_fix/*.jpg')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1ngk6Hvq_4O2X08Kf2mMYrcsxCBr8vRHH"},"executionInfo":{"elapsed":7280,"status":"ok","timestamp":1686300301533,"user":{"displayName":"渡邊 一翔","userId":"04813779956424625336"},"user_tz":-540},"id":"bzVDbgOeE8cM","outputId":"d316936b-b8be-4083-8d48-a6ff89486857"},"outputs":[],"source":["for i, fname in enumerate(images):\n","    img = cv2.imread(fname)\n","    gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\n","    ret, corners = cv2.findChessboardCorners(gray, (cbcol,cbrow),None)\n","\n","    if ret == True:\n","        corners2 = cv2.cornerSubPix(gray,corners,(11,11),(-1,-1),criteria)\n","        \n","        # 回転行列と並進行列を計算する\n","        ret, rvecs, tvecs = cv2.solvePnP(objp, corners2, mtx, dist)\n","\n","        # ３次元の点を画像平面に射影\n","        imgpts, jac = cv2.projectPoints(axis, rvecs, tvecs, mtx, dist)\n","\n","        img = draw(img,corners2,imgpts)\n","        cv2.imwrite('/content/drive/MyDrive/Colab_Notebooks/hanaizumi_project/img_right_fix_line/right_fix_line_'+ str(i) +'.jpg', img)\n","        cv2_imshow(img)\n","        k = cv2.waitKey(0) \u0026 0xff\n","        if k == 's':\n","            cv2.imwrite(fname[:6]+'.png', img)\n","        \n","\n","cv2.destroyAllWindows()"]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyOdUbnuYl0ixWucat2diC58","mount_file_id":"18Y4sFoFEVb1US-Q1F3M0SwbnCrMlg6U7","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}